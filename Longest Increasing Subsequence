import java.util.*;
public class LongestIncreasingSubsequence {
 public static void main(String[] args) {
 Scanner scanner = new Scanner(System.in); 
 System.out.print("Enter the length of the array: ");
 int n = scanner.nextInt(); 
 int[] nums = new int[n];
 System.out.println("Enter the elements of the array:");
 for (int i = 0; i < n; i++) {
 nums[i] = scanner.nextInt();
 } 
 int[] dp = new int[n];
 Arrays.fill(dp, 1);
 int maxLIS = 1;
 int endIndex = 0; 
 for (int i = 1; i < n; i++) {
 for (int j = 0; j < i; j++) {
 if (nums[i] > nums[j]) {
 dp[i] = Math.max(dp[i], dp[j] + 1);
 if (dp[i] > maxLIS) {
 maxLIS = dp[i];
 endIndex = i;
 } } } } 
 List<Integer> lis = new ArrayList<>();
 lis.add(nums[endIndex]);
 int currentLength = maxLIS - 1; 
 for (int i = endIndex - 1; i >= 0; i--) {
 if (dp[i] == currentLength && nums[i] < lis.get(lis.size() - 1)) {
 lis.add(nums[i]);
 currentLength--;
 }
 } 
 Collections.reverse(lis); 
 System.out.println("Longest Increasing Subsequence: " + lis);
 System.out.println("Length of Longest Increasing Subsequence: " + maxLIS);
 }
}
